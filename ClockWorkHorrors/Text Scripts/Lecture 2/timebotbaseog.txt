import bpy

# Reset scene
bpy.ops.wm.read_factory_settings(use_empty=True)

# Function to create a cylinder-based limb
def create_limb(name, location, rotation=(0, 0, 0), radius=0.25, depth=2.5):
    bpy.ops.mesh.primitive_cylinder_add(radius=radius, depth=depth, location=location, rotation=rotation)
    limb = bpy.context.object
    limb.name = name
    return limb

# Create torso
bpy.ops.mesh.primitive_cube_add(size=2, location=(0, 0, 2))
torso = bpy.context.object
torso.name = "Torso"

# Create clock heart (inset in torso)
bpy.ops.mesh.primitive_cylinder_add(radius=0.5, depth=0.1, location=(0, 0.9, 2))
clock = bpy.context.object
clock.name = "ClockHeart"

# Create head
bpy.ops.mesh.primitive_uv_sphere_add(radius=0.6, location=(0, 0, 3.4))
head = bpy.context.object
head.name = "Head"

# Add glowing eyes (you can add emission shader later)
for x in [-0.2, 0.2]:
    bpy.ops.mesh.primitive_uv_sphere_add(radius=0.08, location=(x, 0.3, 3.5))
    eye = bpy.context.object
    eye.name = f"Eye_{'L' if x < 0 else 'R'}"

# Add arms
create_limb("Arm_L", location=(-1.5, 0, 2), rotation=(1.57, 0, 0))
create_limb("Arm_R", location=(1.5, 0, 2), rotation=(1.57, 0, 0))

# Add legs
create_limb("Leg_L", location=(-0.6, 0, 0.5), depth=3)
create_limb("Leg_R", location=(0.6, 0, 0.5), depth=3)

# Group model
bpy.ops.object.select_all(action='DESELECT')
for obj in bpy.data.objects:
    obj.select_set(True)
bpy.ops.object.join()
bpy.context.object.name = "ZombieMech"

# Optional: Save as FBX
bpy.ops.export_scene.fbx(filepath="C:/YourPath/ZombieMech.fbx", use_selection=False)
